
type Label @aws_iam @aws_api_key {
  id: ID!
  S3_path: String
  labels: [Boolean]
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelLabelConnection @aws_api_key @aws_iam {
  items: [Label]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelLabelFilterInput {
  id: ModelIDInput
  S3_path: ModelStringInput
  labels: ModelBooleanInput
  and: [ModelLabelFilterInput]
  or: [ModelLabelFilterInput]
  not: ModelLabelFilterInput
}

type Query {
  getLabel(id: ID!): Label @aws_api_key @aws_iam
  listLabels(filter: ModelLabelFilterInput, limit: Int, nextToken: String): ModelLabelConnection @aws_api_key @aws_iam
  syncLabels(filter: ModelLabelFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelLabelConnection @aws_api_key @aws_iam
}

input ModelLabelConditionInput {
  S3_path: ModelStringInput
  labels: ModelBooleanInput
  and: [ModelLabelConditionInput]
  or: [ModelLabelConditionInput]
  not: ModelLabelConditionInput
}

input CreateLabelInput {
  id: ID
  S3_path: String
  labels: [Boolean]
  _version: Int
}

input UpdateLabelInput {
  id: ID!
  S3_path: String
  labels: [Boolean]
  _version: Int
}

input DeleteLabelInput {
  id: ID!
  _version: Int
}

type Mutation {
  createLabel(input: CreateLabelInput!, condition: ModelLabelConditionInput): Label @aws_api_key @aws_iam
  updateLabel(input: UpdateLabelInput!, condition: ModelLabelConditionInput): Label @aws_api_key @aws_iam
  deleteLabel(input: DeleteLabelInput!, condition: ModelLabelConditionInput): Label @aws_api_key @aws_iam
}

input ModelSubscriptionLabelFilterInput {
  id: ModelSubscriptionIDInput
  S3_path: ModelSubscriptionStringInput
  labels: ModelSubscriptionBooleanInput
  and: [ModelSubscriptionLabelFilterInput]
  or: [ModelSubscriptionLabelFilterInput]
}

type Subscription {
  onCreateLabel(filter: ModelSubscriptionLabelFilterInput): Label @aws_subscribe(mutations: ["createLabel"]) @aws_api_key @aws_iam
  onUpdateLabel(filter: ModelSubscriptionLabelFilterInput): Label @aws_subscribe(mutations: ["updateLabel"]) @aws_api_key @aws_iam
  onDeleteLabel(filter: ModelSubscriptionLabelFilterInput): Label @aws_subscribe(mutations: ["deleteLabel"]) @aws_api_key @aws_iam
}

